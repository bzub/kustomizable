apiVersion: batch/v1
kind: Job
metadata:
  name: job
spec:
  template:
    spec:
      serviceAccountName: sa
      restartPolicy: OnFailure
      initContainers:
        - name: etcd-tls
          image: cfssl
          command:
            - /bin/sh
            - -ec
            - |
              cd /secrets/tls
              template_json='$(cfssl-tls-template.json)'
              echo '$(cfssl-ca-config.json)' > ca-config.json

              cfssl_gencert_ca() {
                name="${1}"
                echo "${template_json}" | sed "s/_NAME_/etcd-${name}/g" | \
                  cfssl gencert -initca - | cfssljson -bare ca -
              }

              cfssl_gencert() {
                name="${1}"
                echo "${template_json}" | sed "s/_NAME_/etcd-${name}/g" | \
                  cfssl gencert -config=ca-config.json -ca=ca.pem -ca-key=ca-key.pem -hostname="${2}" - | \
                  cfssljson -bare "${name}"
              }

              cfssl_gencert_ca ca
              cfssl_gencert server "${TLS_HOSTS}"
              cfssl_gencert peer "${TLS_HOSTS}"
              cfssl_gencert client ""

              mv ca-key.pem ca.key
              mv ca.pem ca.crt
              mv peer-key.pem peer.key
              mv peer.pem peer.crt
              mv server-key.pem server.key
              mv server.pem server.crt
              mv client-key.pem client.key
              mv client.pem client.crt
          volumeMounts:
            - name: certs
              mountPath: /secrets/tls
          envFrom:
            - configMapRef:
                name: cm
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
      containers:
        - name: upload-secrets
          image: kubectl
          command:
            - kubectl
            - create
            - secret
            - generic
            - $(SECRET_NAME)
            - --from-file=/secrets/tls/ca.crt
            - --from-file=/secrets/tls/ca.key
            - --from-file=/secrets/tls/client.crt
            - --from-file=/secrets/tls/client.key
            - --from-file=/secrets/tls/peer.crt
            - --from-file=/secrets/tls/peer.key
            - --from-file=/secrets/tls/server.crt
            - --from-file=/secrets/tls/server.key
          volumeMounts:
            - name: certs
              mountPath: /secrets/tls
          envFrom:
            - configMapRef:
                name: cm
      volumes:
        - name: certs
          emptyDir: {}
